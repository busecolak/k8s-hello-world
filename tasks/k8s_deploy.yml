- name: Create k8s namespace "{{ namespace }}"
  k8s:
    name: "{{ namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: Create a Deployment for "{{ service_name }}".
  k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ service_name }}"
        namespace: "{{ namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: "{{ service_name }}"
        template:
          metadata:
            labels:
              app: "{{ service_name }}"
          spec:
            containers:
            - name: "{{ service_name }}"
              image: "{{ image_name }}"
              imagePullPolicy: Always
              ports:
              - containerPort: "{{ service_port }}"
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi

- name: Create a Service for "{{ service_name }}".
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ service_name }}"
        namespace: "{{ namespace }}"
      spec:
        type: LoadBalancer
        ports:
        - port: "{{ service_port }}"
          targetPort: "{{ service_port }}"
        selector:
          app: "{{ service_name }}"

- name: Create a Ingress for "{{ service_name }}".
  k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1beta1
      kind: Ingress
      metadata:
        name: "{{ service_name }}"
        namespace: "{{ namespace }}"
        annotations:
          kubernetes.io/ingress.class: "nginx"
      spec:
        rules:
        - http:
            paths:
            - path: /
              backend:
                serviceName: "{{ service_name }}"
                servicePort: "{{ service_port }}"